import React, { useState, useEffect } from "react";
import { GamePlayer } from "@/entities/all";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Trophy, Target, Skull, TrendingUp } from "lucide-react";
import { Skeleton } from "@/components/ui/skeleton";

export default function Leaderboard() {
  const [stats, setStats] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    loadStats();
  }, []);

  const loadStats = async () => {
    const allPlayers = await GamePlayer.list("-created_date", 1000);
    
    const playerStats = {};
    allPlayers.forEach(player => {
      if (!playerStats[player.player_email]) {
        playerStats[player.player_email] = {
          email: player.player_email,
          name: player.player_name,
          totalKills: 0,
          totalDeaths: 0,
          totalDamage: 0,
          gamesPlayed: 0
        };
      }
      playerStats[player.player_email].totalKills += player.kills || 0;
      playerStats[player.player_email].totalDeaths += player.deaths || 0;
      playerStats[player.player_email].totalDamage += player.damage_dealt || 0;
      playerStats[player.player_email].gamesPlayed += 1;
    });

    const sortedStats = Object.values(playerStats)
      .map(stat => ({
        ...stat,
        kd: stat.totalDeaths > 0 ? (stat.totalKills / stat.totalDeaths).toFixed(2) : stat.totalKills.toFixed(2)
      }))
      .sort((a, b) => b.totalKills - a.totalKills);

    setStats(sortedStats);
    setLoading(false);
  };

  return (
    <div className="min-h-screen p-4 md:p-8">
      <div className="max-w-6xl mx-auto">
        <div className="mb-8">
          <h1 className="text-4xl font-bold text-white mb-2 bg-gradient-to-r from-yellow-400 to-orange-500 bg-clip-text text-transparent">
            Leaderboard
          </h1>
          <p className="text-gray-400">Top warriors of Strike Arena</p>
        </div>

        <Card className="bg-[#1a1f3a] border-yellow-500/30 shadow-lg shadow-yellow-500/10">
          <CardHeader>
            <CardTitle className="flex items-center gap-2 text-white">
              <Trophy className="w-6 h-6 text-yellow-400" />
              Top Players
            </CardTitle>
          </CardHeader>
          <CardContent>
            {loading ? (
              <div className="space-y-4">
                {[1, 2, 3, 4, 5].map(i => (
                  <div key={i} className="flex items-center gap-4 p-4 rounded-lg bg-[#0f1229]">
                    <Skeleton className="w-8 h-8 rounded-full" />
                    <div className="flex-1">
                      <Skeleton className="h-5 w-32 mb-2" />
                      <Skeleton className="h-4 w-48" />
                    </div>
                  </div>
                ))}
              </div>
            ) : (
              <div className="space-y-3">
                {stats.map((player, index) => (
                  <div
                    key={player.email}
                    className={`flex items-center gap-4 p-4 rounded-lg transition-all hover:scale-[1.02] ${
                      index === 0 ? 'bg-gradient-to-r from-yellow-500/20 to-orange-500/20 border border-yellow-500/50' :
                      index === 1 ? 'bg-gradient-to-r from-gray-400/20 to-gray-500/20 border border-gray-400/50' :
                      index === 2 ? 'bg-gradient-to-r from-orange-600/20 to-orange-700/20 border border-orange-600/50' :
                      'bg-[#0f1229]'
                    }`}
                  >
                    <div className={`w-10 h-10 rounded-full flex items-center justify-center font-bold text-lg ${
                      index === 0 ? 'bg-gradient-to-br from-yellow-400 to-orange-500 text-white' :
                      index === 1 ? 'bg-gradient-to-br from-gray-300 to-gray-400 text-gray-900' :
                      index === 2 ? 'bg-gradient-to-br from-orange-500 to-orange-600 text-white' :
                      'bg-[#2a2f4a] text-gray-400'
                    }`}>
                      {index + 1}
                    </div>
                    
                    <div className="flex-1">
                      <h3 className="font-bold text-white text-lg">{player.name}</h3>
                      <p className="text-sm text-gray-400">{player.gamesPlayed} games played</p>
                    </div>

                    <div className="flex gap-6 text-sm">
                      <div className="text-center">
                        <div className="flex items-center gap-1 text-green-400 font-bold">
                          <Target className="w-4 h-4" />
                          {player.totalKills}
                        </div>
                        <p className="text-xs text-gray-500">Kills</p>
                      </div>
                      <div className="text-center">
                        <div className="flex items-center gap-1 text-red-400 font-bold">
                          <Skull className="w-4 h-4" />
                          {player.totalDeaths}
                        </div>
                        <p className="text-xs text-gray-500">Deaths</p>
                      </div>
                      <div className="text-center">
                        <div className="flex items-center gap-1 text-cyan-400 font-bold">
                          <TrendingUp className="w-4 h-4" />
                          {player.kd}
                        </div>
                        <p className="text-xs text-gray-500">K/D</p>
                      </div>
                      <div className="text-center">
                        <div className="text-orange-400 font-bold">
                          {player.totalDamage}
                        </div>
                        <p className="text-xs text-gray-500">Damage</p>
                      </div>
                    </div>
                  </div>
                ))}

                {stats.length === 0 && (
                  <p className="text-center text-gray-400 py-8">No players yet. Be the first!</p>
                )}
              </div>
            )}
          </CardContent>
        </Card>
      </div>
    </div>
  );
}
